{"version":3,"sources":["./src/app/updatetable/updatetable.component.ts","./src/app/updatetable/updatetable.component.html","./src/environments/environment.ts","./src/app/upload-view/upload-view.component.ts","./src/app/Shared/shared.module.ts","./src/app/app-header/app-header.component.ts","./src/app/app-header/app-header.component.html","./src/app/dashboard/dashboard.component.ts","./src/app/dashboard/dashboard.component.html","./src/app/basic-search/basic-search.component.html","./src/app/basic-search/basic-search.component.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/notes/notes.component.ts","./src/app/notes/notes.component.html","./src/app/owner-assignee/owner-assignee.component.ts","./src/app/owner-assignee/owner-assignee.component.html","./src/app/app.module.ts","./src/app/home-table/hometable.service.ts","./src/app/Shared/material/material.module.ts","./src/app/app-routing.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/home-table/home-table.component.ts","./src/app/home-table/home-table.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport {SelectionModel} from '@angular/cdk/collections';\nimport {MatTableDataSource} from '@angular/material/table';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { HomeTableComponent } from '../home-table/home-table.component';\nimport { UploadViewComponent } from '../upload-view/upload-view.component';\nimport { DomSanitizer } from \"@angular/platform-browser\";\nexport interface PeriodicElement {\n  name: string;\n  position: number;\n  weight: number;\n  symbol: string;\n}\nconst ELEMENT_DATA: PeriodicElement[] = [\n  {position: 1, name: 'test', weight: 1.0079, symbol: '2-mar'},\n  {position: 2, name: 'test', weight: 4.0026, symbol: '2-mar'},\n  {position: 3, name: 'test', weight: 6.941, symbol: '2-mar'},\n  {position: 4, name: 'test', weight: 9.0122, symbol: '2-mar'},\n  {position: 5, name: 'test', weight: 10.811, symbol: '2-mar'},\n];\n@Component({\n  selector: 'app-updatetable',\n  templateUrl: './updatetable.component.html',\n  styleUrls: ['./updatetable.component.css']\n})\nexport class UpdatetableComponent implements OnInit {\n  displayedColumns: string[] = ['select', 'position', 'name', 'weight', 'symbol'];\n  dataSource = new MatTableDataSource<PeriodicElement>(ELEMENT_DATA);\n  selection = new SelectionModel<PeriodicElement>(true, []);\n  fileUrl: any;\n  constructor(private dialogRef: MatDialogRef<HomeTableComponent>,\n    private sanitizer: DomSanitizer,\n    public dialog: MatDialog) { }\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    this.isAllSelected() ?\n        this.selection.clear() :\n        this.dataSource.data.forEach(row => this.selection.select(row));\n  }\n  AddAttachment(){\n      this.dialog.open(UploadViewComponent,{\n        data: \"\"\n      });\n  }\n  // DownloadAttachment(){\n  //   let blob=localStorage.getItem('icon')\n  //   console.log(blob)\n  //   this.fileUrl = this.sanitizer.bypassSecurityTrustResourceUrl(\n  //     window.URL.createObjectURL(blob[0])\n  //   );\n  // }\n  /** The label for the checkbox on the passed row */\n  checkboxLabel(row?: PeriodicElement): string {\n    if (!row) {\n      return `${this.isAllSelected() ? 'select' : 'deselect'} all`;\n    }\n    return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row ${row.position + 1}`;\n  }\n\n\n\n  ngOnInit(): void {\n  }\n  onClose(){\n    this.dialogRef.close();\n  }\n\n}\n","\n  <div class=\"row\">\n    <mat-toolbar class=\"app-toolbar\">\n      <mat-toolbar-row >\n          <span >Update Task</span>\n          <span class=\"example-spacer\"></span>\n\n          <span>\n            <button\n              mat-raised-button\n              class=\"Search\"\n            >\n              Apply\n            </button>\n            <button\n            mat-raised-button\n            class=\"Search ml-2\"\n            (click)=\"onClose()\"\n          >\n            Cancel\n          </button>\n        </span>\n\n      </mat-toolbar-row>\n  </mat-toolbar>\n\n  </div>\n  <br/>\n  <mat-accordion>\n    <mat-expansion-panel hideToggle>\n      <mat-expansion-panel-header>\n        <mat-panel-title>\n         <mat-icon>keyboard_arrow_right </mat-icon>Show Servive Request\n        </mat-panel-title>\n      </mat-expansion-panel-header>\n      <div>\n        <div class=\"row\">\n  <div class=\"col-md-12 header\"><span class=\"field\">Service Request Attachment</span></div>\n</div>\n      </div>\n      <br/>\n  <div class=\"row\">\n    <button\n    mat-raised-button\n    class=\"Search\"\n    (click)=\"AddAttachment()\"\n  >\n    Add Attachment\n  </button>\n  <button\n  mat-raised-button\n  class=\"Search\"\n>\n  Download\n</button>\n  </div>\n  <br/>\n      <div class=\"row\">\n        <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n\n        <!-- Checkbox Column -->\n        <ng-container matColumnDef=\"select\">\n          <th mat-header-cell *matHeaderCellDef>\n            <mat-checkbox (change)=\"$event ? masterToggle() : null\"\n                          [checked]=\"selection.hasValue() && isAllSelected()\"\n                          [indeterminate]=\"selection.hasValue() && !isAllSelected()\"\n                          [aria-label]=\"checkboxLabel()\">\n            </mat-checkbox>\n          </th>\n          <td mat-cell *matCellDef=\"let row\">\n            <mat-checkbox (click)=\"$event.stopPropagation()\"\n                          (change)=\"$event ? selection.toggle(row) : null\"\n                          [checked]=\"selection.isSelected(row)\"\n                          [aria-label]=\"checkboxLabel(row)\">\n            </mat-checkbox>\n          </td>\n        </ng-container>\n\n        <!-- Position Column -->\n        <ng-container matColumnDef=\"position\">\n          <th mat-header-cell *matHeaderCellDef> File Name </th>\n          <td mat-cell *matCellDef=\"let element\"> {{element.position}} </td>\n        </ng-container>\n\n        <!-- Name Column -->\n        <ng-container matColumnDef=\"name\">\n          <th mat-header-cell *matHeaderCellDef> Type </th>\n          <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\n        </ng-container>\n\n        <!-- Weight Column -->\n        <ng-container matColumnDef=\"weight\">\n          <th mat-header-cell *matHeaderCellDef> Description </th>\n          <td mat-cell *matCellDef=\"let element\"> {{element.weight}} </td>\n        </ng-container>\n\n        <!-- Symbol Column -->\n        <ng-container matColumnDef=\"symbol\">\n          <th mat-header-cell *matHeaderCellDef> Last Updated By </th>\n          <td mat-cell *matCellDef=\"let element\"> {{element.symbol}} </td>\n        </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"\n            (click)=\"selection.toggle(row)\">\n        </tr>\n      </table>\n      </div>\n    </mat-expansion-panel>\n    <br/>\n   <app-owner-assignee></app-owner-assignee>\n   <br/>\n  <app-notes></app-notes>\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-upload-view',\n  template: `\n    <input type=\"file\"\n           id=\"file\"\n           (change)=\"handleFileInput($event.target)\">\n    <button (click)=\"upload()\" mat-raised-button color=\"primary\">Upload</button>\n    `\n})\nexport class UploadViewComponent implements OnInit {\n  constructor( private _snackBar: MatSnackBar,\n    private _dialog: MatDialog,) { }\n\n  ngOnInit(): void {\n  }\n\n\n  handleFileInput(event:any){\n    let file = event[0];\n    const fileReader = new FileReader();\n    fileReader.readAsText(file,\"UTF-8\");\n    fileReader.onload = (e) => {\n      //@ts-ignore\n      let temp:any = fileReader.result.toString();\n      let data=new ArrayBuffer(temp.length)\n      let blob = new Blob([new Uint8Array(data)], {type: file.type });\n      localStorage['icon']=blob;\n      console.log(blob);\n        // let temp:any = fileReader.result.toString();\n        // console.log(temp)\n        // this.view = JSON.parse(temp);\n        // console.log(this.view);\n    }\n    fileReader.readAsDataURL(file)\n    fileReader.onerror = (error) => {\n        this._snackBar.open(\"Error!!\",\"ok\")\n    }\n}\nupload(){\n  this._dialog.closeAll();\n  this._snackBar.open(\"Uploaded Successfully\",\"ok\");\n}\n}\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { MaterialModule } from \"./material/material.module\";\n\n\n@NgModule({\n  declarations: [\n\n  ],\n  imports: [\n    CommonModule,\n\n    MaterialModule,\n  ],\n  exports: [\n\n    CommonModule,\n\n    MaterialModule,\n\n  ],\n})\nexport class SharedModule {}\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { IpcRenderer } from 'electron';\r\nimport { HometableService } from '../home-table/hometable.service';\r\ndeclare const myCode: any;\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './app-header.component.html',\r\n  styleUrls: ['./app-header.component.css']\r\n})\r\nexport class AppHeaderComponent implements OnInit {\r\n  @Input() userName:string|undefined;\r\n  ipc!: IpcRenderer;\r\n  constructor(public hometableService:HometableService) { }\r\n   \r\n\r\n  ngOnInit(): void {\r\n    if ((<any>window).require) {\r\n      try {\r\n        this.ipc = (<any>window).require('electron').ipcRenderer;\r\n\r\n      } catch (e) {\r\n        throw e;\r\n      }\r\n    } else {\r\n      console.warn('App not running inside Electron!');\r\n    }\r\n    // this.ipc.send('test',\"result\")\r\n    this.ipc.on('synchresult',(event,data)=>{\r\n        console.log(data);\r\n        if(data==\"completed\"){\r\n          this.ipc.send('Fetch',\"Home\")\r\n        }\r\n        if(data==\"failed\"){\r\n          alert(\"Synch process failed\")\r\n          this.hometableService.dataLoadEmitter.emit(false);\r\n        }\r\n    })\r\n  }\r\n  callFun(){\r\n   // myCode();\r\n   this.ipc.send('test',\"result\");\r\n   this.hometableService.dataLoadEmitter.emit(true);\r\n  }\r\n\r\n  logOut(){\r\n    console.log('Logout clicked')\r\n    this.ipc.send('LOGOUT')\r\n  }\r\n}\r\n","\r\n<nav class=\"navbar navbar-expand-md navbar-light \" role=\"navigation\" >\r\n  <div class=\"navbar-brand\" >MFS</div>\r\n  <button class=\"navbar-toggler\"  type=\"button\" data-toggle=\"collapse\" data-target=\"#collapsibleNavbar\">\r\n    <i class=\"fa fa-bars\" style=\"color: whitesmoke;\"></i>\r\n  </button>\r\n  <div  class=\"collapse navbar-collapse\" id=\"collapsibleNavbar\">\r\n    <div class=\"example-spacer\"></div>\r\n    <ul class=\"navbar-nav icon-nav\">\r\n        <!-- <li class=\"nav-item\">\r\n            <a class=\"nav-link\" (click)=\"onFontClick()\">\r\n                  <mat-icon>font_download</mat-icon>\r\n              </a>\r\n          </li> -->\r\n      <li class=\"nav-item\">\r\n      </li>\r\n      <li class=\"nav-profile\">\r\n        Welcome {{userName}}\r\n      </li>\r\n      <li class=\"nav-item\">\r\n       <button  mat-raised-button\r\n       class=\"mt-1 mr-1\" (click)=\"callFun()\">Synchronize</button>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link\" routerLink=\"/home/contactus\">Home</a>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link\" (click)=\"logOut()\">Logout</a>\r\n      </li>\r\n      <!-- <li class=\"nav-item\">\r\n        <a class=\"nav-link\"><mat-icon (click)=\"logout()\">login</mat-icon></a>\r\n      </li> -->\r\n      <li style = \"display : flex\" class=\"nav-item\">\r\n        <a class=\"nav-link\" routerLink=\"/home/contactus\">Prefrences</a>\r\n        </li>\r\n        <li style = \"display : flex\" class=\"nav-item\">\r\n          <a class=\"nav-link\" routerLink=\"/home/contactus\">Help</a>\r\n          </li>\r\n    </ul>\r\n  </div>\r\n</nav>\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.css']\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n  userName:any;\r\n  constructor(private route: ActivatedRoute) { }\r\n\r\n  ngOnInit(): void {\r\n    this.route.paramMap.subscribe(params => {\r\n     this.userName= params.get('userName')\r\n  });\r\n  }\r\n\r\n}\r\n","<app-header [userName]=\"userName\"></app-header><br/><br/><br/>\r\n<app-basic-search></app-basic-search>\r\n<app-home-table></app-home-table>","<div class=\"container\">\r\n  <div class=\"row\">\r\n  <div>\r\n<mat-form-field class=\"example-form-field\" appearance=\"outline\">\r\n  <mat-label>Search..</mat-label>\r\n  <input matInput type=\"text\">\r\n  <button mat-button *ngIf=\"value\" matSuffix mat-icon-button aria-label=\"Clear\" (click)=\"value=''\">\r\n    <mat-icon>close</mat-icon>\r\n  </button>\r\n</mat-form-field>\r\n  </div>\r\n<div class=\"col buttons\">\r\n  <button\r\n    mat-raised-button\r\n    class=\"Search\"\r\n  >\r\n    Go\r\n  </button>\r\n  <button\r\n  mat-raised-button\r\n  class=\"Search ml-2\"\r\n>\r\n  Advanced Search\r\n</button>\r\n  </div>\r\n</div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-basic-search',\r\n  templateUrl: './basic-search.component.html',\r\n  styleUrls: ['./basic-search.component.css']\r\n})\r\nexport class BasicSearchComponent implements OnInit {\r\n  value = 'Clear me';\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","import { IpcRenderer } from 'electron';\r\nimport { Component,NgZone,OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n//import { BrowserWindow } from 'electron';\r\n//import { ElectronService} from 'ngx-electron';\r\n//const {app, BrowserWindow, ipcMain} = require('electron')\r\n//const electron = require('electron');\r\n//import { } from 'electron';\r\n//const {app} = require('electron')\r\n//const electron = require('electron');\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements OnInit {\r\n  // title = 'electron-demo';\r\n  // constructor(private _electronService: ElectronService) {\r\n    //electron.ipcRenderer.on('other-custom-signal', (event,arg) => {\r\n      //console.log('Received acknowledged from backend about receipt of our signal.');\r\n      //console.log(event);\r\n      //console.log(arg);   })\r\n\r\n  //   console.log('Sending message to backend.');\r\n  //   _electronService.ipcRenderer.send('message', 'hello, are you there?');\r\n  //  }\r\n\r\n  //   public playPingPong() {\r\n  //       if(this._electronService.isElectronApp) {\r\n  //           let pong: string = this._electronService.ipcRenderer.sendSync('ping');\r\n  //           console.log(pong);\r\n  //       }\r\n  //   }\r\n  // title = 'electron-demo';\r\n  // constructor(private _electronService: ElectronService) {\r\n  //electron.ipcRenderer.on('other-custom-signal', (event,arg) => {\r\n  //console.log('Received acknowledged from backend about receipt of our signal.');\r\n  //console.log(event);\r\n  //console.log(arg);   })\r\n  //   console.log('Sending message to backend.');\r\n  //   _electronService.ipcRenderer.send('message', 'hello, are you there?');\r\n  //  }\r\n  //   public playPingPong() {\r\n  //       if(this._electronService.isElectronApp) {\r\n  //           let pong: string = this._electronService.ipcRenderer.sendSync('ping');\r\n  //           console.log(pong);\r\n  //       }\r\n  //   }\r\n  test=[];\r\n  ipc!: IpcRenderer;\r\n      constructor(private _router: Router, private zone: NgZone){\r\n        if ((<any>window).require) {\r\n          try {\r\n            this.ipc = (<any>window).require('electron').ipcRenderer;\r\n\r\n          } catch (e) {\r\n            throw e;\r\n          }\r\n        } else {\r\n          console.warn('App not running inside Electron!');\r\n        }\r\n        this.ipc.send('getLandingPage')\r\n        \r\n      }\r\n      ngOnInit(){\r\n\r\n        this.ipc.on('landingPage',(event,data)=> {\r\n          console.log('APP.COMPONENT.TS -> Landing Page event found', event,data)\r\n          if(data.page == 'login')\r\n            this.ipc.send('LOGIN',\"intiate login process\")\r\n          else if(data.page == 'dashboard')\r\n            this.zone.run(()=>{this._router.navigate(['/dashboard',  { 'userName': data?.account?.name  }])})\r\n        })\r\n\r\n                \r\n        this.ipc.on('other-custom-signal',(event,data)=>{\r\n            console.log(data)\r\n            this.test=data;\r\n            console.log(\"test data : \",this.test)\r\n        })\r\n      }\r\n      click(){\r\n        this.ipc.send('Insert',\"test\")\r\n      }\r\n      fetch(){\r\n        this.ipc.send('Fetch',\"test\")\r\n      }\r\n}\r\n","<router-outlet></router-outlet>\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\nimport {animate, state, style, transition, trigger} from '@angular/animations';\nconst ELEMENT_DATA= [\n  {\n    Country: \"India\",\n    TaskType: \"India\",\n    Subject:\"eee\",\n    Location:\"Delhi\",\n    ServiceRequest: 'Hydrogen',\n    Customer: 1.0079,\n    Task: 'H',\n    description: `Hydrogen is a chemical element with Task H and atomic number 1. With a standard\n        atomic Customer of 1.008, hydrogen is the lightest element on the periodic table.`\n  }\n];\n@Component({\n  selector: 'app-notes',\n  templateUrl: './notes.component.html',\n  styleUrls: ['./notes.component.css'],\n  animations: [\n    trigger('detailExpand', [\n      state('collapsed', style({height: '0px', minHeight: '0'})),\n      state('expanded', style({height: '*'})),\n      transition('expanded <=> collapsed', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)')),\n    ]),\n  ],\n})\nexport class NotesComponent implements OnInit {\n  dataSource = ELEMENT_DATA;\n  columnsToDisplay = ['Details', 'Notes', 'DateEntered', 'User','NoteSource','NoteType','Visibility'];\n  expandedElement:null;\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-accordion>\n  <mat-expansion-panel hideToggle>\n    <mat-expansion-panel-header>\n      <mat-panel-title>\n        <mat-icon>keyboard_arrow_right</mat-icon>Notes History\n      </mat-panel-title>\n    </mat-expansion-panel-header>\n    <table mat-table\n    [dataSource]=\"dataSource\" multiTemplateDataRows\n    class=\"mat-elevation-z8\">\n<ng-container matColumnDef=\"{{column}}\" *ngFor=\"let column of columnsToDisplay; let i=index\">\n <th mat-header-cell *matHeaderCellDef> {{column}} </th>\n <td mat-cell *matCellDef=\"let element\">\n   <div *ngIf=\"column=='Details';else template1\">\n     <span class=\"arrow\"><mat-icon >keyboard_arrow_right</mat-icon></span> <span> More Details</span>\n   </div>\n   <ng-template #template1>\n     <div *ngIf=\"column=='Update';else template2\">\n       <mat-icon>edit</mat-icon>\n     </div>\n  <ng-template #template2>\n   {{element[column]}}\n  </ng-template>\n   </ng-template>\n\n      </td>\n</ng-container>\n\n<!-- Expanded Content Column - The detail row is made up of this one column that spans across all columns -->\n<ng-container matColumnDef=\"expandedDetail\">\n <td mat-cell *matCellDef=\"let element\" [attr.colspan]=\"columnsToDisplay.length\">\n   <div class=\"example-element-detail\"\n        [@detailExpand]=\"element == expandedElement ? 'expanded' : 'collapsed'\">\n     <!-- <div class=\"example-element-diagram\">\n       <div class=\"example-element-position\"> {{element.Country}} </div>\n       <div class=\"example-element-servicerequest\"> {{element.ServiceRequest}} </div>\n       <div class=\"example-element-symbol\"> {{element.Customer}} </div>\n       <div class=\"example-element-name\"> {{element.Task}} </div>\n       <div class=\"example-element-weight\"> {{element.weight}} </div>\n     </div> -->\n     <div class=\"example-element-description\">\n      Full Notes <mat-icon>notes</mat-icon>\n       <span class=\"example-element-description-attribution\">  </span>\n     </div>\n     <div class=\"example-element-description\">\n      Note Text\n       <span class=\"example-element-description-attribution\">  </span>\n     </div>\n   </div>\n </td>\n</ng-container>\n\n<tr mat-header-row *matHeaderRowDef=\"columnsToDisplay\"></tr>\n<tr mat-row *matRowDef=\"let element; columns: columnsToDisplay;\"\n   class=\"example-element-row\"\n   [class.example-expanded-row]=\"expandedElement === element\"\n   (click)=\"expandedElement = expandedElement === element ? null : element\">\n</tr>\n<tr mat-row *matRowDef=\"let row; columns: ['expandedDetail']\" class=\"example-detail-row\"></tr>\n</table>\n  </mat-expansion-panel>\n  </mat-accordion>\n\n","import { Component, OnInit } from '@angular/core';\nimport {SelectionModel} from '@angular/cdk/collections';\nimport {MatTableDataSource} from '@angular/material/table';\nexport interface PeriodicElement {\n  name: string;\n  position: number;\n  weight: number;\n}\nconst ELEMENT_DATA: PeriodicElement[] = [\n  {position: 1, name: 'test', weight: 1.0079},\n];\n@Component({\n  selector: 'app-owner-assignee',\n  templateUrl: './owner-assignee.component.html',\n  styleUrls: ['./owner-assignee.component.css']\n})\nexport class OwnerAssigneeComponent implements OnInit {\n  displayedColumns: string[] = ['select','Resource_Name', 'Resource_Type', 'Status'];\n  dataSource = new MatTableDataSource<PeriodicElement>(ELEMENT_DATA);\n  selection = new SelectionModel<PeriodicElement>(true, []);\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    this.isAllSelected() ?\n        this.selection.clear() :\n        this.dataSource.data.forEach(row => this.selection.select(row));\n  }\n\n  /** The label for the checkbox on the passed row */\n  checkboxLabel(row?: PeriodicElement): string {\n    if (!row) {\n      return `${this.isAllSelected() ? 'select' : 'deselect'} all`;\n    }\n    return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row ${row.position + 1}`;\n  }\n\n\n}\n","<div class=\"container\">\n<div class=\"row\">\n  <div class=\"col-md-12 header\"><span class=\"field\">Owner And Assignee(s)</span></div>\n</div>\n<br/>\n<div class=\"row\">\n<table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n\n  <!-- Checkbox Column -->\n  <ng-container matColumnDef=\"select\">\n    <th mat-header-cell *matHeaderCellDef>\n      <mat-checkbox (change)=\"$event ? masterToggle() : null\"\n                    [checked]=\"selection.hasValue() && isAllSelected()\"\n                    [indeterminate]=\"selection.hasValue() && !isAllSelected()\"\n                    [aria-label]=\"checkboxLabel()\">\n      </mat-checkbox>\n    </th>\n    <td mat-cell *matCellDef=\"let row\">\n      <mat-checkbox (click)=\"$event.stopPropagation()\"\n                    (change)=\"$event ? selection.toggle(row) : null\"\n                    [checked]=\"selection.isSelected(row)\"\n                    [aria-label]=\"checkboxLabel(row)\">\n      </mat-checkbox>\n    </td>\n  </ng-container>\n\n  <!-- Position Column -->\n  <ng-container matColumnDef=\"Resource_Name\">\n    <th mat-header-cell *matHeaderCellDef> Resource Name </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.position}} </td>\n  </ng-container>\n\n  <!-- Name Column -->\n  <ng-container matColumnDef=\"Resource_Type\">\n    <th mat-header-cell *matHeaderCellDef> Resource Type </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\n  </ng-container>\n\n  <!-- Weight Column -->\n  <ng-container matColumnDef=\"Status\">\n    <th mat-header-cell *matHeaderCellDef>Status </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.weight}} </td>\n  </ng-container>\n\n  <!-- Symbol Column -->\n\n\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"\n      (click)=\"selection.toggle(row)\">\n  </tr>\n</table>\n</div>\n</div>\n","import { CommonModule } from '@angular/common';\nimport { CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgxElectronModule } from 'ngx-electron';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { AppHeaderComponent } from './app-header/app-header.component';\nimport { HomeTableComponent } from './home-table/home-table.component';\nimport { BasicSearchComponent } from './basic-search/basic-search.component';\nimport { UpdatetableComponent } from './updatetable/updatetable.component';\nimport { NotesComponent } from './notes/notes.component';\nimport { OwnerAssigneeComponent } from './owner-assignee/owner-assignee.component';\nimport { UploadViewComponent } from './upload-view/upload-view.component';\nimport { SharedModule } from './Shared/shared.module';\nimport { LoginComponent } from './login/login.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AppHeaderComponent,\n    HomeTableComponent,\n    BasicSearchComponent,\n    UpdatetableComponent,\n    NotesComponent,\n    OwnerAssigneeComponent,\n    UploadViewComponent,\n    LoginComponent,\n    DashboardComponent\n  ],\n  imports: [\n    NgxElectronModule,\n    SharedModule,\n    CommonModule,\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable ,EventEmitter} from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class HometableService {\r\n  dataLoadEmitter = new  EventEmitter();\r\n  constructor() { }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n//angular material module starts\nimport { MatToolbarModule } from \"@angular/material/toolbar\";\nimport { MatIconModule } from \"@angular/material/icon\";\nimport { MatBottomSheetModule } from \"@angular/material/bottom-sheet\";\nimport { MatListModule } from \"@angular/material/list\";\nimport { MatFormFieldModule } from \"@angular/material/form-field\"\nimport { MatInputModule } from \"@angular/material/input\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { MatSelectModule } from \"@angular/material/select\";\nimport { MatSnackBarModule } from \"@angular/material/snack-bar\";\nimport { MatTableModule } from \"@angular/material/table\";\nimport { MatPaginatorModule } from \"@angular/material/paginator\";\nimport { MatSortModule } from \"@angular/material/sort\";\nimport { MatDialogModule } from \"@angular/material/dialog\";\nimport { MatSidenavModule } from \"@angular/material/sidenav\";\nimport { MatTreeModule } from \"@angular/material/tree\";\nimport { MatExpansionModule } from \"@angular/material/expansion\";\nimport { MatProgressSpinnerModule } from \"@angular/material/progress-spinner\";\nimport { MatProgressBarModule } from \"@angular/material/progress-bar\";\nimport { MatCardModule } from \"@angular/material/card\";\nimport {MatStepperModule} from '@angular/material/stepper';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport {MatRadioModule} from '@angular/material/radio';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatTabsModule} from '@angular/material/tabs';\n\n// import { MatMomentDateModule } from \"@angular/material-moment-adapter\";\n//angular material module ends\n\nlet matModules = [\n  MatCheckboxModule,\n  MatRadioModule,\n  MatSlideToggleModule,\n  MatToolbarModule,\n  MatSidenavModule,\n  MatFormFieldModule,\n  MatInputModule,\n  MatSelectModule,\n  MatButtonModule,\n  MatExpansionModule,\n  MatIconModule,\n  MatSnackBarModule,\n  MatProgressSpinnerModule,\n  MatTableModule,\n  MatSnackBarModule,\n  MatPaginatorModule,\n  MatProgressBarModule,\n  MatBottomSheetModule,\n  MatListModule,\n  MatSortModule,\n  MatDialogModule,\n  MatTreeModule,\n  MatCardModule,\n  MatStepperModule,\n  MatMenuModule,\n  MatAutocompleteModule,\n  MatDatepickerModule,\n  MatChipsModule,\n  MatTabsModule,\n];\n@NgModule({\n  declarations: [],\n  imports: [CommonModule, ...matModules],\n  exports: [...matModules]\n})\nexport class MaterialModule { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { LoginComponent } from './login/login.component';\n\nconst routes: Routes = [\n  { \n    path: 'login',\n    component: LoginComponent\n  },\n  {\n    path: 'dashboard',\n    component: DashboardComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\r\nimport { IpcRenderer } from 'electron';\r\n\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  ipc!: IpcRenderer;\r\n  constructor() {\r\n    if ((<any>window).require) {\r\n      try {\r\n        this.ipc = (<any>window).require('electron').ipcRenderer;\r\n        console.log('LOGIN.COMPONENT.TS-> IPC-> LINE 16',this.ipc)\r\n      } catch (e) {\r\n        throw e;\r\n      }\r\n    } else {\r\n      console.warn('App not running inside Electron!');\r\n    }\r\n    console.log('LOGIN.COMPONENT.TS-> IPC-> Line 23',this.ipc)\r\n   }\r\n\r\n  ngOnInit(): void {\r\n    console.log('')\r\n  }\r\n\r\n  signIn() {\r\n    this.ipc.send(\"LOGIN\",\"test\")\r\n  }\r\n\r\n}\r\n","LOGIN Page<button  mat-raised-button\n       class=\"mt-1 mr-1\" (click)=\"signIn()\">Sign In</button>\n       Login page end","import { ChangeDetectorRef, Component, Input, OnInit } from '@angular/core';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\n\r\n//import {MatTableModule,MatHeaderCellDef,MatHeaderRowDef} from '@angular/material/table';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport {animate, state, style, transition, trigger} from '@angular/animations';\r\nimport { Router } from '@angular/router';\r\nimport { UpdatetableComponent } from '../updatetable/updatetable.component';\r\nimport { IpcRenderer } from 'electron';\r\nimport { HometableService } from './hometable.service';\r\ndeclare const launchCode: any;\r\n@Component({\r\n  selector: 'app-home-table',\r\n  templateUrl: './home-table.component.html',\r\n  styleUrls: ['./home-table.component.css'],\r\n  animations: [\r\n    trigger('detailExpand', [\r\n      state('collapsed', style({height: '0px', minHeight: '0'})),\r\n      state('expanded', style({height: '*'})),\r\n      transition('expanded <=> collapsed', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)')),\r\n    ]),\r\n  ],\r\n})\r\n\r\nexport class HomeTableComponent implements OnInit {\r\n  ipc!: IpcRenderer;\r\n  test=[];\r\n  loader:Boolean=false;\r\n  dataSource=[];\r\n  constructor(private _dialog:MatDialog,private ref:ChangeDetectorRef,public hometableService:HometableService) {\r\n    \r\n  }\r\n  expandedElement: null;\r\n  columnsToDisplay=['contract_number', 'customer_name', 'task_number','task_status','scheduled_start_date','scheduled_end_date','country_name','Update','Launch_ART'];\r\n  ngOnInit(): void {\r\n    if ((<any>window).require) {\r\n      try {\r\n        this.ipc = (<any>window).require('electron').ipcRenderer;\r\n\r\n      } catch (e) {\r\n        throw e;\r\n      }\r\n    } else {\r\n      console.warn('App not running inside Electron!');\r\n    }\r\n\r\n    this.hometableService.dataLoadEmitter.subscribe(res=>{\r\n      console.log(\"loader:\",this.loader)\r\n      this.loader=res;\r\n      console.log(res,this.loader)\r\n    })\r\n\r\n    this.ipc.send('Fetch',\"test\");\r\n    \r\n    this.ipc.on('other-custom-signal',(event,data)=>{\r\n      this.loader=false;\r\n      console.log(data)\r\n      this.test=data;\r\n      console.log(\"test data inside home: \",this.test)\r\n      this.dataSource= this.test;\r\n      this.ref.detectChanges();\r\n      console.log(\"Inside home table\",this.dataSource);\r\n  })\r\n\r\n\r\n\r\n  }\r\n  // parameterInitialize() {\r\n  //   let columnNames = Object.keys(this.test);\r\n  //   console.log(\"columnName: \",columnNames)\r\n  //   this.columnsToDisplay=columnNames\r\n  // }\r\n  click(){\r\n    this.ipc.send('Insert',\"test\")\r\n  }\r\n  fetch(){\r\n    this.ipc.send('Fetch',\"test\")\r\n  }\r\n  update(){\r\n    let dialogRef  = this._dialog.open(UpdatetableComponent,{\r\n      data :{},\r\n      width:\"800px\",\r\n      height:\"600px\"\r\n\r\n  });\r\n  }\r\n  launch(){\r\n    launchCode();\r\n  }\r\n//   launch(){\r\n//     var child = require('child_process').execFile;\r\n// var executablePath = \"C:\\\\Program Files (x86)\\\\Google\\\\Chrome\\\\Application\\\\chrome.exe\";\r\n// var parameters = [\"--incognito\"];\r\n\r\n// child(executablePath, parameters, function(err, data) {\r\n//      console.log(err)\r\n//      console.log(data.toString());\r\n//   });\r\n// }\r\n}\r\n","<mat-spinner style=\"margin:0 auto;\" mode=\"indeterminate\" class=\"spinner-container\" *ngIf=\"loader\"></mat-spinner>\r\n<div class=\"container\" *ngIf=\"!loader\"><div class=\"row\">\r\n  <div class=\"row\">\r\n    <div class=\"col-md-12 header\"><span class=\"field\">Field Service Technician Dashboard</span></div>\r\n  </div>\r\n  <table mat-table\r\n         [dataSource]=\"dataSource\" multiTemplateDataRows\r\n         class=\"mat-elevation-z8\">\r\n    <ng-container matColumnDef=\"{{column}}\" *ngFor=\"let column of columnsToDisplay; let i=index\">\r\n      <th mat-header-cell *matHeaderCellDef> {{column}} </th>\r\n      <td mat-cell *matCellDef=\"let element\">\r\n        <div *ngIf=\"column=='Details';else template1\">\r\n          <span class=\"arrow\"><mat-icon >keyboard_arrow_right</mat-icon></span> <span> More Details</span>\r\n        </div>\r\n        <ng-template #template1>\r\n          <div *ngIf=\"column=='Update';else template3\">\r\n            <mat-icon (click)=\"update()\">edit</mat-icon>\r\n          </div>\r\n          <ng-template #template3>\r\n            <div *ngIf=\"column=='Launch_ART';else template2\">\r\n              <mat-icon (click)=\"launch()\">launch</mat-icon>\r\n            </div>\r\n           </ng-template>\r\n       <ng-template #template2>\r\n        {{element[column]}}\r\n       </ng-template>\r\n        </ng-template>\r\n   \r\n           </td>\r\n    </ng-container>\r\n   \r\n    <!-- Expanded Content Column - The detail row is made up of this one column that spans across all columns -->\r\n    <ng-container matColumnDef=\"expandedDetail\">\r\n      <td mat-cell *matCellDef=\"let element\" [attr.colspan]=\"columnsToDisplay.length\">\r\n        <div class=\"example-element-detail\"\r\n             [@detailExpand]=\"element == expandedElement ? 'expanded' : 'collapsed'\">\r\n          <!-- <div class=\"example-element-diagram\">\r\n            <div class=\"example-element-position\"> {{element.Country}} </div>\r\n            <div class=\"example-element-servicerequest\"> {{element.ServiceRequest}} </div>\r\n            <div class=\"example-element-symbol\"> {{element.Customer}} </div>\r\n            <div class=\"example-element-name\"> {{element.Task}} </div>\r\n            <div class=\"example-element-weight\"> {{element.weight}} </div>\r\n          </div> -->\r\n          <div class=\"row\">\r\n        </div>\r\n        </div>\r\n      </td>\r\n    </ng-container>\r\n   \r\n    <tr mat-header-row *matHeaderRowDef=\"columnsToDisplay\"></tr>\r\n    <tr mat-row *matRowDef=\"let element; columns: columnsToDisplay;\"\r\n        class=\"example-element-row\"\r\n        [class.example-expanded-row]=\"expandedElement === element\"\r\n        (click)=\"expandedElement = expandedElement === element ? null : element\">\r\n    </tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: ['expandedDetail']\" class=\"example-detail-row\"></tr>\r\n  </table>\r\n  </div>\r\n  <router-outlet></router-outlet>","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n  ","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}